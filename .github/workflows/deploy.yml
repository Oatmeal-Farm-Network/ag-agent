name: Test, Build, and Deploy Agent to Azure Container Apps

# This workflow runs on a direct push to the 'main' branch
# OR when a pull request is merged into the 'main' branch.
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

env:
  RESOURCE_GROUP: "MyAgentResourceGroup"
  CONTAINER_APP_NAME: "my-agent-app"
  ACR_NAME: "farmagent"
  IMAGE_NAME: "agent-smaller"
  

jobs:
  test-build-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    runs-on: ubuntu-latest
    # Granting permissions for the action to create Git tags
    permissions:
      contents: write  # Required to create tags

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all history is fetched for tagging

      - name: Get next version
        id: version
        uses: reecetech/version-increment@2024.10.1
        with:
          scheme: semver
          increment: patch # Bumps the last number (e.g., 1.1.0 -> 1.1.1)

        #  We use the output from the previous step.
      - name: Set Image Tag Environment Variable
        run: echo "IMAGE_TAG=${{ steps.version.outputs.version }}" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Combined installation and testing into a single step
      - name: Install Dependencies and Run Tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pytest tests/

      # The following steps will only run if the tests above succeed.
      - name: Log in to Azure
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        if: success()
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      - name: Build and push Docker image
        if: success()
        run: |
          docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Azure Container Apps
        if: success()
        run: |
            az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

        #  creates the new tag in our repo for the next run
      - name: Create new Git tag
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git tag ${{ env.IMAGE_TAG }}
          git push origin ${{ env.IMAGE_TAG }}