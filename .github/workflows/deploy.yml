name: Test, Build, and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

#==================================================================================
# === CHANGES MADE HERE ===
# I've defined the names for both your frontend and backend container apps.
# The rest of your variables were already correct.
#==================================================================================
env:
  RESOURCE_GROUP: "MyAgentResourceGroup"
  FRONTEND_CONTAINER_APP_NAME: "multi-container-agent-app"
  BACKEND_CONTAINER_APP_NAME: "multi-container-agent-backend"
  ACR_NAME: "farmagent"
  BACKEND_IMAGE_NAME: "my-fastapi-backend"
  FRONTEND_IMAGE_NAME: "my-react-frontend"

jobs:
  test-build-and-deploy:
    # This condition is fine, keeping it as is.
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create tags

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures all history is fetched for tagging

      #===========================================================================
      # ===  VERSIONING LOGIC 
      #===========================================================================
      - name: Get next version
        id: version
        uses: reecetech/version-increment@2024.10.1
        with:
          scheme: semver
          increment: patch
          initial-version: 1.0.1 
          version-prefix: v

      - name: Set Image Tag Environment Variable
        run: echo "IMAGE_TAG=${{ steps.version.outputs.version }}" >> $GITHUB_ENV

      # --- Backend Testing Steps  ---
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Backend Dependencies and Run Tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # python -m pytest tests/ # Uncomment if you have tests

      # --- Frontend Testing Steps ---
      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies and Run Tests
        working-directory: ./frontend
        run: |
          npm ci
          # npm test # Uncomment if you have tests

      # --- Azure Login Steps  ---
      - name: Log in to Azure
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        if: success()
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      # --- Build and Push Both Images  ---
      - name: Build and push Backend image
        if: success()
        run: |
          docker build . -f Dockerfile \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:latest
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }} --all-tags

      - name: Build and push Frontend image
        if: success()
        working-directory: ./frontend
        run: |
          docker build . -f Dockerfile \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.FRONTEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.FRONTEND_IMAGE_NAME }}:latest
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.FRONTEND_IMAGE_NAME }} --all-tags

      #==================================================================================
      # === CHANGES MADE HERE ===
      # deployment logic.
      # The single failing step is replaced with two dedicated, robust steps.
      #==================================================================================
      - name: Deploy Backend image to Azure Container App
        if: success()
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.BACKEND_CONTAINER_APP_NAME }}
          imageToDeploy: ${{ env.ACR_NAME }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy Frontend image to Azure Container App
        if: success()
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.FRONTEND_CONTAINER_APP_NAME }}
          imageToDeploy: ${{ env.ACR_NAME }}.azurecr.io/${{ env.FRONTEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # --- Tagging Step  ---
      - name: Create new Git tag
        if: success()
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git tag ${{ env.IMAGE_TAG }}
          git push origin ${{ env.IMAGE_TAG }}