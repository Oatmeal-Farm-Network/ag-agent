name: Test, Build, and Deploy Agent to Azure Container Apps

# This workflow runs on a direct push to the 'main' branch
# OR when a pull request is merged into the 'main' branch.
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

# Environment variables available to all jobs
env:
  RESOURCE_GROUP: "MyAgentResourceGroup"
  CONTAINER_APP_NAME: "my-agent-app"
  ACR_NAME: "farmagent"
  IMAGE_NAME: "agent-smaller"

jobs:
  test-build-and-deploy:
    # This condition ensures the job only runs for pushes to main,
    # or when a pull request was successfully merged.
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4 # Updated to v4 for latest features

      # Step 2: Set up Python environment
      - name: Setup Python
        uses: actions/setup-python@v5 # Updated to v5
        with:
          python-version: '3.10'

      # Step 3: Install all Python dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests with pytest
      - name: Run automated tests
        run: pytest tests/

      # Step 5: Log in to Azure using the Service Principal secret
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 6: Log in to Azure Container Registry
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      # Step 7: Build and Push the Docker image
      - name: Build and push Docker image
        run: |
          docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Step 8: Deploy the new image to Azure Container Apps
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          imageToDeploy: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}